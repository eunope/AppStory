/* inject:filelist_json */
Base64={_Rixits:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz+/",fromNumber:function(a){if(isNaN(Number(a))||null===a||a===Number.POSITIVE_INFINITY)throw"The input is not valid";if(0>a)throw"Can't represent negative numbers now";for(var b=Math.floor(a),c="";a=b%64,c=this._Rixits.charAt(a)+c,b=Math.floor(b/64),0!=b;);return c},toNumber:function(a){var b=0;a=a.split("");for(var c=0;c<a.length;c++)b=64*b+this._Rixits.indexOf(a[c]);return b}};

document.getElementById('view_url').addEventListener('click',function(){
	this.select();
});
function get_view(json_data) {
	var arrayString = "";
	var baseString = false;
	var query = window.location.search.substring(1);
	var vars = query.split('&');
	var dataLength = 0;
	var tmpString = "";
	for (var i = 0; i < vars.length; i++) {
		var pair = vars[i].split('=');
		if (decodeURIComponent(pair[0]) == 'view') {
			baseString = decodeURIComponent(pair[1]);
			break;
		}
	}
	if(baseString) {
		for(var i=0,imax=baseString.length;i<imax;i++) {
			tmpString = Base64.toNumber(baseString[i]).toString(2);
			for(var j=0,jmax=6-tmpString.length;j<jmax;j++) {
				tmpString = "0"+tmpString;
			}
			arrayString += tmpString;
		}
		for(var i=0,imax=json_data.length;i<imax;i++) {
			dataLength += json_data[i].groupList.length;
		}
		if(arrayString.length < dataLength) {
			for(var i=0,imax=dataLength-arrayString.length;i<imax;i++) {
				arrayString += "0";
			}
		} else {
			arrayString = arrayString.substring(0,dataLength);
		}
	}
	return arrayString;
}
function check_all(el) {
	var checked = el.checked;
	var checkboxes = el.parentNode.parentNode.parentNode.getElementsByClassName('view_check');
	for(var i=0,imax=checkboxes.length;i<imax;i++) {
		checkboxes[i].checked = checked;
	}
}
function create_url() {
	var checkboxes = document.getElementsByClassName('view_check');
	var checkArray = [];
	var arrayData = "";
	var arrayString = "";
	var imax = checkboxes.length+1;
	for(var i=1;i<imax;i++) {
		arrayString += checkboxes[i-1].checked ? "1" : "0";
		if(i%6 == 0) {
			arrayData += Base64.fromNumber(parseInt(arrayString,2));
			arrayString = "";
		}
	}
	if(arrayString.length > 0) {
		var imax = 6 - arrayString.length;
		for(var i=0;i<imax;i++) {
			arrayString += "0";
		}
		arrayData += Base64.fromNumber(parseInt(arrayString,2));
		arrayString = "";
	}
	arrayData = arrayData.replace(/0+$/,'');
	document.getElementById('view_url').value = location.href+'?view='+arrayData;
}
function create_filelist(json_data) {
	var arrayString = get_view(json_data);
	if(!arrayString) {
		document.getElementById('multi_select').style.display = "block";
	}
	var totalCount = 0;
	for(var i=0,imax=json_data.length;i<imax;i++) {
		var groupObj = json_data[i];
		var list;
		var div = document.createElement('div');
		var title_h2 = document.createElement('h2');
		var label = document.createElement('label');
		var span = document.createElement('span');
		var spanButton = document.createElement('span');
		var file_num = 0;
		var title_string = '';

		var ul = document.createElement('ul');
		for(var j=0,jmax=groupObj.groupList.length;j<jmax;j++) {
			if(arrayString && arrayString[totalCount++] === "0") {
				continue;
			}
			var li = document.createElement('li');
			var data = groupObj.groupList[j];
			var liString = '<a href="'+data.path+'">'+(data.title || 'No Title')+'<span>'+data.path+'</span></a>';
			if(!arrayString) {
				liString = '<input type="checkbox" class="view_check" name="view_check"> '+liString;
			}
			li.innerHTML = liString;
			ul.appendChild(li);
			file_num++;
		}
		if(ul.childElementCount > 0)
		{
			title_h2.classList.add('sec_h');
			if(groupObj.groupName == '___default') {
				list = document.getElementById('defaultList');
				title_string = '파일 리스트 ('+file_num+'개)';
			} else {
				list = document.getElementById('groupList');
				title_string = groupObj.groupName+' ('+file_num+'개)';
			}

			if(!arrayString) {
				label.innerHTML = '<input type="checkbox" onclick="check_all(this)"> ';
			}

			if(span.innerText === "") {
				span.innerText = title_string;
			} else if(span.textContent === "") {
				span.textContent = title_string;
			}
			if(fold) {
				spanButton.innerHTML = ' <button type="button" class="btn fold_btn" onclick="fold_group(this)">접기</button>';
			}
			label.appendChild(span);
			title_h2.appendChild(label);
			title_h2.appendChild(spanButton);
			div.appendChild(title_h2);
			div.appendChild(ul);
			list.appendChild(div);
		}
	}
}
function init_fold() {
	if(fold) {
		var span = document.createElement('span');
		span.innerHTML = '<button type="button" class="btn" onclick="fold_all(true)">전체 접기</button> <button type="button" class="btn" onclick="fold_all(false)">전체 펼치기</button>';
		document.getElementById('multi_select').appendChild(span);
	}
}
function fold_group(el) {
	var ul = el.parentNode.parentNode.parentNode.querySelector('ul');
	if(el.classList.toggle('folded')) {
		ul.style.display = 'none';
		el.innerHTML = '펼치기';
	} else {
		ul.style.display = 'block';
		el.innerHTML = '접기';
	}
}
function fold_all(all) {
	if(all) {
		var foldButtons = document.querySelectorAll('.fold_btn:not(.folded)');
	} else {
		var foldButtons = document.querySelectorAll('.fold_btn.folded');
	}
	var imax = foldButtons.length;
	for(var i=0;i<imax;i++) {
		foldButtons[i].click();
	}
}
init_fold();
if(filelist_json) {
	create_filelist(filelist_json);
} else {
	var filename = window.location.pathname.substring(window.location.pathname.lastIndexOf('/')+1,window.location.pathname.lastIndexOf('.'));
	var req = new XMLHttpRequest();
	req.open('GET', './'+filename+'.json', false);
	req.onreadystatechange = function (aEvt) {
		if (req.readyState == 4) {
			if(req.status == 200) {
				create_filelist(JSON.parse(req.responseText));
			}
		}
	};
	req.send(null);
}